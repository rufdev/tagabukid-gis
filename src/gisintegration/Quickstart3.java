/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gisintegration;

import com.vividsolutions.jts.geom.Envelope;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.event.MouseWheelEvent;
import java.io.File;
import java.io.IOException;
import javax.swing.GroupLayout;
import javax.swing.JPanel;
import org.geotools.data.FileDataStore;
import org.geotools.data.FileDataStoreFinder;
import org.geotools.data.simple.SimpleFeatureSource;
import org.geotools.map.FeatureLayer;
import org.geotools.map.MapContent;
import org.geotools.renderer.lite.StreamingRenderer;
import org.geotools.styling.SLD;
import org.geotools.styling.Style;
import org.geotools.swing.JMapFrame;
import org.geotools.swing.action.InfoAction;
import org.geotools.swing.action.NoToolAction;
import org.geotools.swing.action.PanAction;
import org.geotools.swing.action.ResetAction;
import org.geotools.swing.action.ZoomInAction;
import org.geotools.swing.action.ZoomOutAction;
import org.geotools.swing.control.JMapStatusBar;

/**
 *
 * @author rufino
 */

public class Quickstart3 extends JPanel {

    /**
     * Creates new form Quickstart3
     * @throws java.io.IOException
     */
    public Quickstart3() throws IOException{
       
         
//        File file = JFileDataStoreChooser.showOpenFile("shp", null);
//        if (file == null) {
//            return;
//        }
//        Style shpStyle = SLD.createPolygonStyle(Color.BLUE, null, 0.0f);
//        FileDataStore store = FileDataStoreFinder.getDataStore(file);
//        SimpleFeatureSource featureSource = store.getFeatureSource();
//        Layer shpLayer = new FeatureLayer(featureSource, shpStyle);
//
//        // Create a map context and add our shapefile to it
//        MapContent map = new MapContent();
//        map.setTitle("Quickstart");
//        map.addLayer(shpLayer);
//        test = new JMapPane();
//        test.setBackground(Color.white);
//        test.setMapContent(map);
//        mapGUI.add(test, BorderLayout.CENTER);
        // Now display the map
        
        File roads =  new File("C:\\Users\\rufino\\Desktop\\Pagudpud shp file\\PAGUDPUD CASE1 1 2 3 Data Encoding Drawing.shp");

        FileDataStore roadstore = FileDataStoreFinder.getDataStore(roads);
        SimpleFeatureSource featureSource = roadstore.getFeatureSource();

        MapContent map = new MapContent();
        map.setTitle("ETRACS Geo");

        Style style = SLD.createSimpleStyle(featureSource.getSchema());
        FeatureLayer layer = new FeatureLayer(featureSource, style);
        map.addLayer(layer);
//        JMapFrame.showMap(map);
        initComponents();
        //JMapStatusBar.createDefaultStatusBar(mapPane);
//        add(JMapStatusBar.createDefaultStatusBar(mapPane),"grow");
//
//        JMapFrame.showMap(map);

//         Create a MapContent instance and add one or more layers to it
//        MapContent map = new MapContent();

        // Create a renderer which will draw the features
//        GTRenderer renderer = new StreamingRenderer();
//
//        // Create the map pane to work with this renderer and map content.
//        // When first shown on screen it will display the layers.
//        test = new JMapPane();
       
        mapPane.setRenderer( new StreamingRenderer() );
        mapPane.setMapContent( map );
        mapPane.setVisible(true);
      
    }
   
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        mapPane = new org.geotools.swing.JMapPane();
        jToolBar1 = new javax.swing.JToolBar();
        ToolbarPointerButton = new javax.swing.JButton(new NoToolAction(mapPane));
        jSeparator1 = new javax.swing.JToolBar.Separator();
        ToolbarResetButton = new javax.swing.JButton(new ResetAction(mapPane));
        jSeparator2 = new javax.swing.JToolBar.Separator();
        ToolbarZoomInButton = new javax.swing.JButton(new ZoomInAction(mapPane));
        ToolbarZoomOutButton = new javax.swing.JButton(new ZoomOutAction(mapPane));
        jSeparator3 = new javax.swing.JToolBar.Separator();
        ToolbarInfoButton = new javax.swing.JButton(new InfoAction(mapPane));
        ToolbarPanButton = new javax.swing.JButton(new PanAction(mapPane));
        jMapStatusBar2 = JMapStatusBar.createDefaultStatusBar(mapPane);

        javax.swing.GroupLayout mapPaneLayout = new javax.swing.GroupLayout(mapPane);
        mapPane.setLayout(mapPaneLayout);
        mapPaneLayout.setHorizontalGroup(
            mapPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        mapPaneLayout.setVerticalGroup(
            mapPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 217, Short.MAX_VALUE)
        );

        jToolBar1.setRollover(true);

        ToolbarPointerButton.setFocusable(false);
        ToolbarPointerButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        ToolbarPointerButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(ToolbarPointerButton);
        jToolBar1.add(jSeparator1);

        ToolbarResetButton.setFocusable(false);
        ToolbarResetButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        ToolbarResetButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(ToolbarResetButton);
        jToolBar1.add(jSeparator2);

        ToolbarZoomInButton.setFocusable(false);
        ToolbarZoomInButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        ToolbarZoomInButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(ToolbarZoomInButton);

        ToolbarZoomOutButton.setFocusable(false);
        ToolbarZoomOutButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        ToolbarZoomOutButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(ToolbarZoomOutButton);
        jToolBar1.add(jSeparator3);

        ToolbarInfoButton.setFocusable(false);
        ToolbarInfoButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        ToolbarInfoButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(ToolbarInfoButton);

        ToolbarPanButton.setFocusable(false);
        ToolbarPanButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        ToolbarPanButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(ToolbarPanButton);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
            .addComponent(mapPane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jMapStatusBar2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mapPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jMapStatusBar2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ToolbarInfoButton;
    private javax.swing.JButton ToolbarPanButton;
    private javax.swing.JButton ToolbarPointerButton;
    private javax.swing.JButton ToolbarResetButton;
    private javax.swing.JButton ToolbarZoomInButton;
    private javax.swing.JButton ToolbarZoomOutButton;
    private javax.swing.ButtonGroup buttonGroup1;
    private org.geotools.swing.control.JMapStatusBar jMapStatusBar2;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JToolBar.Separator jSeparator3;
    private javax.swing.JToolBar jToolBar1;
    private org.geotools.swing.JMapPane mapPane;
    // End of variables declaration//GEN-END:variables

}
